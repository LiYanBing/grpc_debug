// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameRequest) Reset()         { *m = GetNameRequest{} }
func (m *GetNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetNameRequest) ProtoMessage()    {}
func (*GetNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_c3e7df7a3efc3593, []int{0}
}
func (m *GetNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameRequest.Unmarshal(m, b)
}
func (m *GetNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameRequest.Marshal(b, m, deterministic)
}
func (dst *GetNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameRequest.Merge(dst, src)
}
func (m *GetNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetNameRequest.Size(m)
}
func (m *GetNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameRequest proto.InternalMessageInfo

func (m *GetNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNameRequest) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type GetNameResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNameResponse) Reset()         { *m = GetNameResponse{} }
func (m *GetNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetNameResponse) ProtoMessage()    {}
func (*GetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_c3e7df7a3efc3593, []int{1}
}
func (m *GetNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNameResponse.Unmarshal(m, b)
}
func (m *GetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNameResponse.Marshal(b, m, deterministic)
}
func (dst *GetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNameResponse.Merge(dst, src)
}
func (m *GetNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetNameResponse.Size(m)
}
func (m *GetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNameResponse proto.InternalMessageInfo

func (m *GetNameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNameResponse) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*GetNameRequest)(nil), "example.GetNameRequest")
	proto.RegisterType((*GetNameResponse)(nil), "example.GetNameResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleServiceClient is the client API for ExampleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleServiceClient interface {
	GetName(ctx context.Context, in *GetNameRequest, opts ...grpc.CallOption) (*GetNameResponse, error)
}

type exampleServiceClient struct {
	cc *grpc.ClientConn
}

func NewExampleServiceClient(cc *grpc.ClientConn) ExampleServiceClient {
	return &exampleServiceClient{cc}
}

func (c *exampleServiceClient) GetName(ctx context.Context, in *GetNameRequest, opts ...grpc.CallOption) (*GetNameResponse, error) {
	out := new(GetNameResponse)
	err := c.cc.Invoke(ctx, "/example.ExampleService/GetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleServiceServer is the server API for ExampleService service.
type ExampleServiceServer interface {
	GetName(context.Context, *GetNameRequest) (*GetNameResponse, error)
}

func RegisterExampleServiceServer(s *grpc.Server, srv ExampleServiceServer) {
	s.RegisterService(&_ExampleService_serviceDesc, srv)
}

func _ExampleService_GetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServiceServer).GetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ExampleService/GetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServiceServer).GetName(ctx, req.(*GetNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExampleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.ExampleService",
	HandlerType: (*ExampleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetName",
			Handler:    _ExampleService_GetName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_example_c3e7df7a3efc3593) }

var fileDescriptor_example_c3e7df7a3efc3593 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xcc, 0xb8,
	0xf8, 0xdc, 0x53, 0x4b, 0xfc, 0x12, 0x73, 0x53, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84,
	0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c,
	0x21, 0x01, 0x2e, 0xe6, 0xc4, 0xf4, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x10, 0x53,
	0xc9, 0x9c, 0x8b, 0x1f, 0xae, 0xaf, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x95, 0x38, 0x8d, 0x46, 0x01,
	0x5c, 0x7c, 0xae, 0x10, 0xbb, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xec, 0xb8, 0xd8,
	0xa1, 0x46, 0x09, 0x89, 0xeb, 0xc1, 0x9c, 0x89, 0xea, 0x28, 0x29, 0x09, 0x4c, 0x09, 0x88, 0xad,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x2f, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x63, 0x34,
	0xca, 0xe3, 0x00, 0x00, 0x00,
}
